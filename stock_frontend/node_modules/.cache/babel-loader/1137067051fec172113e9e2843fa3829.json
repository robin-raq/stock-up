{"ast":null,"code":"var _jsxFileName = \"/Users/raq-school/Documents/NYTTP/stock-up/stock_frontend/src/containers/FormContainer.js\";\nimport React, { Component } from 'react';\nimport tokens from '../config_keys';\nexport default class FormContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ticker: '',\n      quantity: 0,\n      total: 0,\n      balance: 0,\n      transaction: {\n        ticker: 'N/A',\n        price: 0\n      },\n      displayQuote: false,\n      canBuy: false\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      fetch(`https://cloud.iexapis.com/stable/stock/${this.state.ticker}/quote?token=${tokens.IEX_TOKEN}`).then(r => r.json()).then(stockObj => {\n        const newTotal = this.state.quantity * stockObj.latestPrice;\n        const transaction = {\n          ticker: stockObj.symbol,\n          price: stockObj.latestPrice,\n          quantity: this.state.quantity,\n          user_id: this.props.currentUser.id,\n          total: newTotal.toFixed(2)\n        };\n        const canBuy = parseInt(transaction.total) <= parseInt(this.state.balance);\n        console.log(transaction.total, this.state.balance);\n        console.log(parseInt(transaction.total) <= parseInt(this.state.balance));\n        this.setState({\n          transaction: transaction,\n          total: newTotal,\n          displayQuote: true,\n          canBuy: canBuy\n        });\n      }).catch(error => {\n        alert(\"Please Verify Stock Symbol and Try Again\");\n      });\n    };\n\n    this.handleClick = () => {\n      // post fetch to database to create new transaction\n      fetch(`http://localhost:3000/transactions`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'accept': 'application/json'\n        },\n        body: JSON.stringify(this.state.transaction)\n      }).then(resp => resp.json()).then(respObj => {\n        console.log(respObj.transaction, respObj.user);\n        this.setState({\n          balance: respObj.user.balance\n        });\n      }).catch(error => {\n        alert(error);\n      }); //post fetch to the database to create a new holding\n\n      fetch(`http://localhost:3000/holdings`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'accept': 'application/json'\n        },\n        body: JSON.stringify(this.state.transaction)\n      }).then(resp => resp.json()).then(respObj => {\n        // console.log(respObj.holding)\n        this.props.displayNewStock(respObj.holding);\n        this.setState({\n          ticker: '',\n          quantity: 0,\n          displayQuote: false,\n          canBuy: false\n        });\n      }).catch(error => {\n        alert(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/profile', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.token}`\n      }\n    }).then(res => res.json()).then(user => {\n      // console.log(user)   \n      const newBalance = parseInt(user.balance).toFixed(2);\n      this.setState({\n        balance: newBalance\n      });\n    });\n  }\n\n  render() {\n    // console.log(\"currentUser's Balance\", this.state.balance)\n    const {\n      price\n    } = this.state.transaction;\n    return React.createElement(\"div\", {\n      className: \"pa4-l\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Purchase Stocks\"), React.createElement(\"form\", {\n      className: \"bg-light-yellow mw7 center pa4 br2-ns ba b--black-10\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      className: \"cf bn ma0 pa0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"pa0 f5 f4-ns mb3 black-80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.balance >= 0 ? React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Current Balance: $\", this.state.balance.toFixed(2)) : React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Current Balance: $ INSUFFICIENT FUNDS \")), React.createElement(\"div\", {\n      className: \"cf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"db fw4 lh-copy f6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Ticker/Symbol\"), React.createElement(\"input\", {\n      className: \"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns pb1\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"ticker\",\n      placeholder: \"AMZN\",\n      value: this.state.ticker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"db fw4 lh-copy f6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"input\", {\n      className: \"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns pb1\",\n      onChange: this.handleChange,\n      type: \"number\",\n      name: \"quantity\",\n      min: \"1\",\n      placeholder: \" 1\",\n      value: this.state.quantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"f6 f5-l button-reset fl pv3 tc bn bg-animate bg-black-70 hover-bg-black white pointer w-100 w-25-m w-20-l br2-ns br--right-ns\",\n      type: \"submit\",\n      value: \"Get Price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), this.state.displayQuote ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Cost Breakdown:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.quantity, \" shares of \", this.state.ticker, \" stock @ $\", price.toFixed(2), \"/share\"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Total Cost\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \" $\", this.state.transaction.total, \" \"), this.state.canBuy ? React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Buy\") : React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"N/A\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/raq-school/Documents/NYTTP/stock-up/stock_frontend/src/containers/FormContainer.js"],"names":["React","Component","tokens","FormContainer","state","ticker","quantity","total","balance","transaction","price","displayQuote","canBuy","handleChange","evt","setState","target","name","value","handleSubmit","preventDefault","fetch","IEX_TOKEN","then","r","json","stockObj","newTotal","latestPrice","symbol","user_id","props","currentUser","id","toFixed","parseInt","console","log","catch","error","alert","handleClick","method","headers","body","JSON","stringify","resp","respObj","user","displayNewStock","holding","componentDidMount","localStorage","token","res","newBalance","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACjDG,KADiD,GACzC;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,QAAQ,EAAE,CAFN;AAGJC,MAAAA,KAAK,EAAE,CAHH;AAIJC,MAAAA,OAAO,EAAE,CAJL;AAKJC,MAAAA,WAAW,EAAC;AAACJ,QAAAA,MAAM,EAAE,KAAT;AAAgBK,QAAAA,KAAK,EAAE;AAAvB,OALR;AAMJC,MAAAA,YAAY,EAAE,KANV;AAOJC,MAAAA,MAAM,EAAE;AAPJ,KADyC;;AAAA,SAWjDC,YAXiD,GAWjCC,GAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACV,SAACD,GAAG,CAACE,MAAJ,CAAWC,IAAZ,GAAmBH,GAAG,CAACE,MAAJ,CAAWE;AADpB,OAAd;AAGH,KAfgD;;AAAA,SAiBjDC,YAjBiD,GAiBjCL,GAAD,IAAQ;AACnBA,MAAAA,GAAG,CAACM,cAAJ;AACAC,MAAAA,KAAK,CAAE,0CAAyC,KAAKjB,KAAL,CAAWC,MAAO,gBAAeH,MAAM,CAACoB,SAAU,EAA7F,CAAL,CACCC,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEOG,QAAD,IAAc;AAEhB,cAAMC,QAAQ,GAAG,KAAKvB,KAAL,CAAWE,QAAX,GAAsBoB,QAAQ,CAACE,WAAhD;AACA,cAAMnB,WAAW,GAAG;AAAEJ,UAAAA,MAAM,EAAEqB,QAAQ,CAACG,MAAnB;AAA2BnB,UAAAA,KAAK,EAAEgB,QAAQ,CAACE,WAA3C;AAAwDtB,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAA7E;AAAuFwB,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,EAAvH;AAA2H1B,UAAAA,KAAK,EAAEoB,QAAQ,CAACO,OAAT,CAAiB,CAAjB;AAAlI,SAApB;AAEA,cAAMtB,MAAM,GAAIuB,QAAQ,CAAC1B,WAAW,CAACF,KAAb,CAAR,IAA+B4B,QAAQ,CAAC,KAAK/B,KAAL,CAAWI,OAAZ,CAAvD;AAEA4B,QAAAA,OAAO,CAACC,GAAR,CAAa5B,WAAW,CAACF,KAAzB,EAAgC,KAAKH,KAAL,CAAWI,OAA3C;AACA4B,QAAAA,OAAO,CAACC,GAAR,CAAaF,QAAQ,CAAC1B,WAAW,CAACF,KAAb,CAAR,IAA+B4B,QAAQ,CAAC,KAAK/B,KAAL,CAAWI,OAAZ,CAApD;AAEA,aAAKO,QAAL,CAAc;AACVN,UAAAA,WAAW,EAAEA,WADH;AAEVF,UAAAA,KAAK,EAAEoB,QAFG;AAGVhB,UAAAA,YAAY,EAAE,IAHJ;AAIVC,UAAAA,MAAM,EAAEA;AAJE,SAAd;AAOH,OAnBD,EAmBG0B,KAnBH,CAmBUC,KAAD,IAAW;AAChBC,QAAAA,KAAK,CAAC,0CAAD,CAAL;AACH,OArBD;AAsBH,KAzCgD;;AAAA,SA2CjDC,WA3CiD,GA2CpC,MAAM;AACf;AACApB,MAAAA,KAAK,CAAE,oCAAF,EAAuC;AACxCqB,QAAAA,MAAM,EAAC,MADiC;AAExCC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAF+B;AAMxCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK1C,KAAL,CAAWK,WAA1B;AANkC,OAAvC,CAAL,CAQCc,IARD,CAQMwB,IAAI,IAAIA,IAAI,CAACtB,IAAL,EARd,EASCF,IATD,CASMyB,OAAO,IAAG;AACZZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,OAAO,CAACvC,WAApB,EAAiCuC,OAAO,CAACC,IAAzC;AACA,aAAKlC,QAAL,CAAc;AACVP,UAAAA,OAAO,EAAGwC,OAAO,CAACC,IAAR,CAAazC;AADb,SAAd;AAKH,OAhBD,EAgBG8B,KAhBH,CAgBUC,KAAD,IAAW;AAChBC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACH,OAlBD,EAFe,CAsBf;;AACAlB,MAAAA,KAAK,CAAE,gCAAF,EAAmC;AACpCqB,QAAAA,MAAM,EAAC,MAD6B;AAEpCC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAF2B;AAMpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK1C,KAAL,CAAWK,WAA1B;AAN8B,OAAnC,CAAL,CAQCc,IARD,CAQMwB,IAAI,IAAIA,IAAI,CAACtB,IAAL,EARd,EASCF,IATD,CASMyB,OAAO,IAAG;AACZ;AACA,aAAKjB,KAAL,CAAWmB,eAAX,CAA2BF,OAAO,CAACG,OAAnC;AACA,aAAKpC,QAAL,CAAc;AAACV,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE,CAAvB;AAA0BK,UAAAA,YAAY,EAAE,KAAxC;AAA+CC,UAAAA,MAAM,EAAE;AAAvD,SAAd;AAEH,OAdD,EAcG0B,KAdH,CAcUC,KAAD,IAAW;AAChBC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACH,OAhBD;AAiBH,KAnFgD;AAAA;;AAqFjDa,EAAAA,iBAAiB,GAAE;AACf/B,IAAAA,KAAK,CAAC,+BAAD,EAAiC;AAClCsB,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASU,YAAY,CAACC,KAAM;AADzC;AADyB,KAAjC,CAAL,CAKC/B,IALD,CAKMgC,GAAG,IAAIA,GAAG,CAAC9B,IAAJ,EALb,EAMCF,IAND,CAMO0B,IAAD,IAAU;AACZ;AACA,YAAMO,UAAU,GAAGrB,QAAQ,CAACc,IAAI,CAACzC,OAAN,CAAR,CAAuB0B,OAAvB,CAA+B,CAA/B,CAAnB;AACA,WAAKnB,QAAL,CAAc;AACVP,QAAAA,OAAO,EAAEgD;AADC,OAAd;AAGH,KAZD;AAcH;;AAIDC,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAAC/C,MAAAA;AAAD,QAAU,KAAKN,KAAL,CAAWK,WAA3B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAII;AACI,MAAA,SAAS,EAAC,sDADd;AAEI,MAAA,QAAQ,EAAI,KAAKU,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA;AAAU,MAAA,SAAS,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKf,KAAL,CAAWI,OAAX,IAAsB,CAAtB,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA2B,KAAKJ,KAAL,CAAWI,OAAX,CAAmB0B,OAAnB,CAA2B,CAA3B,CAA3B,CADJ,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAJZ,CADJ,EAUI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AACI,MAAA,SAAS,EAAE,qGADf;AAEI,MAAA,QAAQ,EAAI,KAAKrB,YAFrB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,WAAW,EAAC,MALhB;AAMI,MAAA,KAAK,EAAI,KAAKT,KAAL,CAAWC,MANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAS4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAT5C,EASiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATjD,EAWI;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,EAYI;AACI,MAAA,SAAS,EAAE,qGADf;AAEI,MAAA,QAAQ,EAAI,KAAKQ,YAFrB;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,GAAG,EAAC,GALR;AAMI,MAAA,WAAW,EAAE,IANjB;AAOI,MAAA,KAAK,EAAI,KAAKT,KAAL,CAAWE,QAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAoBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBZ,EAoBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBjB,EAsBI;AACI,MAAA,SAAS,EAAC,+HADd;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,KAAK,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,CAVJ,CAJA,CAJJ,EAgDW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhDX,EAgDgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhDhB,EAmDQ,KAAKF,KAAL,CAAWO,YAAX,GACA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,KAAL,CAAWE,QADhB,iBACqC,KAAKF,KAAL,CAAWC,MADhD,gBACkEK,KAAK,CAACwB,OAAN,CAAc,CAAd,CADlE,WAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAM,KAAK9B,KAAL,CAAWK,WAAX,CAAuBF,KAA7B,MANJ,EASQ,KAAKH,KAAL,CAAWQ,MAAX,GAAoB;AAAQ,MAAA,OAAO,EAAG,KAAK6B,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApB,GAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAT/E,CADJ,CADA,GAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnER,CADJ;AAyEH;;AApLgD","sourcesContent":["import React, { Component } from 'react';\nimport tokens from '../config_keys';\n\nexport default class FormContainer extends Component {\n    state = {\n        ticker: '',\n        quantity: 0,\n        total: 0,\n        balance: 0,\n        transaction:{ticker: 'N/A', price: 0},\n        displayQuote: false, \n        canBuy: false\n    }\n\n    handleChange = (evt)=>{\n        this.setState({\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n    handleSubmit = (evt) =>{\n        evt.preventDefault()\n        fetch(`https://cloud.iexapis.com/stable/stock/${this.state.ticker}/quote?token=${tokens.IEX_TOKEN}`)\n        .then(r => r.json())\n        .then((stockObj) => {\n            \n            const newTotal = this.state.quantity * stockObj.latestPrice\n            const transaction = { ticker: stockObj.symbol, price: stockObj.latestPrice, quantity: this.state.quantity, user_id: this.props.currentUser.id, total: newTotal.toFixed(2)}\n\n            const canBuy = (parseInt(transaction.total) <= parseInt(this.state.balance))\n\n            console.log (transaction.total, this.state.balance)\n            console.log (parseInt(transaction.total) <= parseInt(this.state.balance))\n\n            this.setState({\n                transaction: transaction,\n                total: newTotal,\n                displayQuote: true,\n                canBuy: canBuy\n                \n            })\n        }).catch((error) => {\n            alert(\"Please Verify Stock Symbol and Try Again\")\n        });\n    }\n\n    handleClick =() => {\n        // post fetch to database to create new transaction\n        fetch(`http://localhost:3000/transactions`, {\n            method:'POST',\n            headers: { \n                'Content-type': 'application/json',\n                'accept': 'application/json'\n        },\n            body: JSON.stringify(this.state.transaction)\n        })\n        .then(resp => resp.json())\n        .then(respObj=> {\n            console.log(respObj.transaction, respObj.user)\n            this.setState({\n                balance:  respObj.user.balance\n            })\n            \n            \n        }).catch((error) => {\n            alert(error)\n        });\n        \n        //post fetch to the database to create a new holding\n        fetch(`http://localhost:3000/holdings`, {\n            method:'POST',\n            headers: { \n                'Content-type': 'application/json',\n                'accept': 'application/json'\n        },\n            body: JSON.stringify(this.state.transaction)\n        })\n        .then(resp => resp.json())\n        .then(respObj=> {\n            // console.log(respObj.holding)\n            this.props.displayNewStock(respObj.holding)\n            this.setState({ticker: '', quantity: 0, displayQuote: false, canBuy: false})\n            \n        }).catch((error) => {\n            alert(error)\n        });\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:3000/profile',{\n            headers: {\n                'Authorization': `Bearer ${localStorage.token}`\n            }\n        })\n        .then(res => res.json())\n        .then((user) => {\n            // console.log(user)   \n            const newBalance = parseInt(user.balance).toFixed(2)\n            this.setState({\n                balance: newBalance\n            })\n        })\n\n    }\n\n    \n    \n    render() {\n        // console.log(\"currentUser's Balance\", this.state.balance)\n        const {price} = this.state.transaction\n        return (\n            <div className=\"pa4-l\">\n                <h2>Purchase Stocks</h2>\n\n\n                <form \n                    className=\"bg-light-yellow mw7 center pa4 br2-ns ba b--black-10\" \n                    onSubmit = {this.handleSubmit}\n                >\n                <fieldset className=\"cf bn ma0 pa0\">\n                    <legend className=\"pa0 f5 f4-ns mb3 black-80\"> \n                        {\n                            this.state.balance >= 0 ? \n                                <strong>Current Balance: ${this.state.balance.toFixed(2)}</strong>  \n                            :   <strong>Current Balance: $ INSUFFICIENT FUNDS </strong>\n                        }\n                    \n                    </legend>\n\n                    <div className=\"cf\">\n\n                        <label className=\"db fw4 lh-copy f6\" >Ticker/Symbol</label>\n                        <input \n                            className =\"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns pb1\" \n                            onChange = {this.handleChange} \n                            type=\"text\" \n                            name=\"ticker\" \n                            placeholder=\"AMZN\" \n                            value = {this.state.ticker}></input><br/><br/>\n\n                        <label className=\"db fw4 lh-copy f6\" >Quantity</label>\n                        <input \n                            className =\"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns pb1\" \n                            onChange = {this.handleChange} \n                            type=\"number\"  \n                            name=\"quantity\" \n                            min=\"1\" \n                            placeholder= \" 1\" \n                            value = {this.state.quantity}>\n                        </input><br/><br/>\n\n                        <input \n                            className=\"f6 f5-l button-reset fl pv3 tc bn bg-animate bg-black-70 hover-bg-black white pointer w-100 w-25-m w-20-l br2-ns br--right-ns\" \n                            type=\"submit\" \n                            value=\"Get Price\">\n                        </input>\n                    </div>\n\n                </fieldset>\n                </form><br/><br/>   \n\n                { \n                    this.state.displayQuote ?\n                    <>\n                        <span>\n                            <strong>Cost Breakdown:</strong> \n                            <p> \n                                {this.state.quantity} shares of {this.state.ticker} stock @ ${price.toFixed(2)}/share \n                            </p>\n                            <strong>Total Cost</strong>\n                            <p> ${this.state.transaction.total} </p> \n\n                            {\n                                this.state.canBuy ? <button onClick ={this.handleClick}>Buy</button> : <button>N/A</button>\n                            }\n                        </span> \n                    </>\n                    :\n                    <div></div>\n\n                }\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}