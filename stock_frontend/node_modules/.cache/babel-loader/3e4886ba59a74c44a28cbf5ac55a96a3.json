{"ast":null,"code":"var _jsxFileName = \"/Users/raq-school/Documents/NYTTP/stock-up/stock_frontend/src/containers/FormContainer.js\";\nimport React, { Component } from 'react';\nimport tokens from '../config_keys';\nexport default class FormContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ticker: '',\n      quantity: 0,\n      total: 0,\n      balance: 0,\n      transaction: {\n        ticker: 'N/A',\n        price: 0\n      }\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.displayQuote = transaction => {\n      if (transaction.total > this.state.balance || transaction.total === 0) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      console.log(\"current balance\", this.state.balance);\n      console.log(\"total\", this.state.total); // this.props.getStockInfo(this.state.ticker)\n\n      fetch(`https://cloud.iexapis.com/stable/stock/${this.state.ticker}/quote?token=${tokens.IEX_TOKEN}`).then(r => r.json()).then(stockObj => {\n        // console.log(stockObj)\n        const newTotal = this.state.quantity * stockObj.latestPrice;\n        const transaction = {\n          ticker: stockObj.symbol,\n          price: stockObj.latestPrice,\n          quantity: this.state.quantity,\n          user_id: this.props.currentUser.id,\n          total: newTotal.toFixed(2)\n        };\n        this.displayQuote(transaction);\n        this.setState({\n          transaction: transaction,\n          total: newTotal.toFixed(2)\n        });\n      }).catch(error => {\n        alert(\"Please Verify Stock Symbol and Try Again\");\n      });\n    };\n\n    this.handleClick = () => {\n      // post fetch to database to create new transaction\n      fetch(`http://localhost:3000/transactions`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'accept': 'application/json'\n        },\n        body: JSON.stringify(this.state.transaction)\n      }).then(resp => resp.json()).then(respObj => {\n        console.log(respObj.transaction, respObj.user);\n        this.props.updateUserBalance(respObj.user);\n      }).catch(error => {\n        alert(error);\n      }); //post fetch to the database to create a new holding\n\n      fetch(`http://localhost:3000/holdings`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'accept': 'application/json'\n        },\n        body: JSON.stringify(this.state.transaction)\n      }).then(resp => resp.json()).then(respObj => {\n        // console.log(respObj.holding)\n        this.props.displayNewStock(respObj.holding);\n      }).catch(error => {\n        alert(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/profile', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.token}`\n      }\n    }).then(res => res.json()).then(user => {\n      // console.log(user)   \n      this.setState({\n        balance: user.balance\n      });\n    });\n  }\n\n  render() {\n    console.log(\"form state balance\", this.state.balance); // console.log((this.props.currentUser.balance))\n\n    const {\n      price\n    } = this.state.transaction;\n    return React.createElement(\"div\", {\n      className: \"pa4-l\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Purchase Stocks\"), React.createElement(\"form\", {\n      className: \"bg-light-yellow mw7 center pa4 br2-ns ba b--black-10\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      className: \"cf bn ma0 pa0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"pa0 f5 f4-ns mb3 black-80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.balance >= 0 ? React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Current Balance: $\", this.state.balance) : React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Current Balance: $ INSUFFICIENT FUNDS \")), React.createElement(\"div\", {\n      className: \"cf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"db fw4 lh-copy f6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Ticker/Symbol\"), React.createElement(\"input\", {\n      className: \"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns pb1\",\n      onChange: this.handleChange,\n      type: \"text\",\n      id: \"ticker\",\n      name: \"ticker\",\n      placeholder: \"AMZN\",\n      value: this.state.ticker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"db fw4 lh-copy f6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"input\", {\n      className: \"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns pb1\",\n      onChange: this.handleChange,\n      type: \"number\",\n      id: \"quantity\",\n      name: \"quantity\",\n      min: \"1\",\n      placeholder: \"0\",\n      value: this.state.quantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"f6 f5-l button-reset fl pv3 tc bn bg-animate bg-black-70 hover-bg-black white pointer w-100 w-25-m w-20-l br2-ns br--right-ns\",\n      type: \"submit\",\n      value: \"Get Price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/raq-school/Documents/NYTTP/stock-up/stock_frontend/src/containers/FormContainer.js"],"names":["React","Component","tokens","FormContainer","state","ticker","quantity","total","balance","transaction","price","handleChange","evt","setState","target","name","value","displayQuote","handleSubmit","preventDefault","console","log","fetch","IEX_TOKEN","then","r","json","stockObj","newTotal","latestPrice","symbol","user_id","props","currentUser","id","toFixed","catch","error","alert","handleClick","method","headers","body","JSON","stringify","resp","respObj","user","updateUserBalance","displayNewStock","holding","componentDidMount","localStorage","token","res","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport tokens from '../config_keys';\n\nexport default class FormContainer extends Component {\n    state = {\n        ticker: '',\n        quantity: 0,\n        total: 0,\n        balance: 0,\n        transaction:{ticker: 'N/A', price: 0}\n    }\n\n    handleChange = (evt)=>{\n        this.setState({\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n    displayQuote =(transaction)=>{\n\n        if(transaction.total > this.state.balance || transaction.total ===0 ){\n            return false\n        }\n        else{\n            return true\n        }\n\n    }\n\n    handleSubmit = (evt) =>{\n        evt.preventDefault()\n        console.log(\"current balance\", this.state.balance)\n        console.log(\"total\", this.state.total)\n        // this.props.getStockInfo(this.state.ticker)\n        fetch(`https://cloud.iexapis.com/stable/stock/${this.state.ticker}/quote?token=${tokens.IEX_TOKEN}`)\n        .then(r => r.json())\n        .then((stockObj) => {\n            // console.log(stockObj)\n            const newTotal = this.state.quantity * stockObj.latestPrice\n            const transaction = { ticker: stockObj.symbol, price: stockObj.latestPrice, quantity: this.state.quantity, user_id: this.props.currentUser.id, total: newTotal.toFixed(2)}\n            this.displayQuote(transaction)\n            this.setState({\n                transaction: transaction,\n                total: newTotal.toFixed(2)\n            })\n        }).catch((error) => {\n            alert(\"Please Verify Stock Symbol and Try Again\")\n        });\n    }\n\n    handleClick =() => {\n        // post fetch to database to create new transaction\n        fetch(`http://localhost:3000/transactions`, {\n            method:'POST',\n            headers: { \n                'Content-type': 'application/json',\n                'accept': 'application/json'\n        },\n            body: JSON.stringify(this.state.transaction)\n        })\n        .then(resp => resp.json())\n        .then(respObj=> {\n            console.log(respObj.transaction, respObj.user)\n            this.props.updateUserBalance(respObj.user)\n            \n            \n            \n        }).catch((error) => {\n            alert(error)\n        });\n        \n        //post fetch to the database to create a new holding\n        fetch(`http://localhost:3000/holdings`, {\n            method:'POST',\n            headers: { \n                'Content-type': 'application/json',\n                'accept': 'application/json'\n        },\n            body: JSON.stringify(this.state.transaction)\n        })\n        .then(resp => resp.json())\n        .then(respObj=> {\n            // console.log(respObj.holding)\n            this.props.displayNewStock(respObj.holding)\n            \n        }).catch((error) => {\n            alert(error)\n        });\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:3000/profile',{\n            headers: {\n                'Authorization': `Bearer ${localStorage.token}`\n            }\n        })\n        .then(res => res.json())\n        .then((user) => {\n            // console.log(user)   \n            this.setState({\n                balance: user.balance\n            })\n        })\n\n    }\n\n    \n    \n    render() {\n        console.log(\"form state balance\", this.state.balance)\n        // console.log((this.props.currentUser.balance))\n        const {price} = this.state.transaction\n        return (\n            <div className=\"pa4-l\">\n                <h2>Purchase Stocks</h2>\n\n\n                <form className=\"bg-light-yellow mw7 center pa4 br2-ns ba b--black-10\" onSubmit = {this.handleSubmit}>\n                <fieldset className=\"cf bn ma0 pa0\">\n                    <legend className=\"pa0 f5 f4-ns mb3 black-80\"> \n                    {this.state.balance >= 0 ? \n                    <strong>Current Balance: ${this.state.balance}</strong> : \n                    <strong>Current Balance: $ INSUFFICIENT FUNDS </strong>\n                    }\n                    \n                    </legend>\n                    <div className=\"cf\">\n\n                        <label className=\"db fw4 lh-copy f6\" >Ticker/Symbol</label>\n                        <input className =\"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns pb1\" onChange = {this.handleChange} type=\"text\" id=\"ticker\" name=\"ticker\" placeholder=\"AMZN\" value = {this.state.ticker}></input><br/><br/>\n\n                        <label className=\"db fw4 lh-copy f6\" >Quantity</label>\n                        <input className =\"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns pb1\" onChange = {this.handleChange} type=\"number\" id =\"quantity\" name=\"quantity\" min=\"1\" placeholder= \"0\" value = {this.state.quantity}></input><br/><br/>\n\n                        <input className=\"f6 f5-l button-reset fl pv3 tc bn bg-animate bg-black-70 hover-bg-black white pointer w-100 w-25-m w-20-l br2-ns br--right-ns\" type=\"submit\" value=\"Get Price\"></input>\n                    </div>\n\n                    </fieldset>\n                </form><br/><br/>   \n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}